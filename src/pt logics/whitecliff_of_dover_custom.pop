		
WaveSchedule
{
	PointTemplates
	{	
		Global_Filters 
		{
			NoFixup 1
			filter_activator_tfteam 
			{
				"targetname" "filter_is_blue"
				"Negated" "0"
				"TeamNum" "3"
			}	
			filter_activator_tfteam 
			{
				"targetname" "filter_is_red"
				"Negated" "0"
				"TeamNum" "2"
			}	
		}

		Redeemer_Spawn
		{
			OnSpawnOutput
			{
				Target "!activator"
				Action "$SetVar$hasRedeemer"
				Param "1"
			}
			OnParentKilledOutput
			{
				Target "!activator"
				Action "$SetVar$hasRedeemer"
				Param "0"
			}
		}

		ParryAddiction_Spawn
		{
			OnSpawnOutput
			{
				Target "popscript"
				Action "$ParryAddictionEquip" 
			}
			// OnParentKilledOutput
			// {
			// 	Target "popscript"
			// 	Action "$ParryAddictionUnequip" 
			// }
		}
		
		Building_Level2_Spawn
		{
			OnSpawnOutput
			{
				Target constructed_check_loop
				Action Trigger 
				Delay 0.1
			}

			$filter_sendprop
			{
				"targetname" "filter_constructed"
				"$name" "m_flPercentageConstructed"
				"$value" "1"
				"$compare" "greater than or equal"
				"Negated" "0"

				"OnPass" "apply_level2,Trigger,,0,-1"
			}

			//if building was built in setup or player used building canteen, cancel
			$filter_sendprop
			{
				"targetname" "filter_is_already_constructed"
				"$name" "m_iHighestUpgradeLevel"
				"$value" "2"
				"$compare" "greater than or equal"
				"Negated" "0"

				"OnPass" "constructed_check_loop,Disable,,0,-1"
			}

			logic_relay 
			{
				"targetname" "constructed_check_loop"
				"spawnflags" "2"

				"OnTrigger" "filter_constructed,TestActivator,,0,-1"
				"OnTrigger" "filter_is_already_constructed,TestActivator,,0,-1"

				"OnTrigger" "!self,Trigger,,0.1,-1"
			}

			logic_relay 
			{
				"targetname" "apply_level2"
				"spawnflags" "2"

				"OnTrigger" "!activator,$SetProp$m_iHighestUpgradeLevel,2,0,-1"

				"OnTrigger" "constructed_check_loop,Disable,,0,-1"
			}
		}

		DroneWalker_Equip
		{
			OnSpawnOutput
			{
				Target "popscript"
				Action "$DroneWalkerEquip"	
			}
			OnParentKilledOutput
			{
				Target "popscript"
				Action "$DroneWalkerUnequip"	
			}
		}

		DroneWalker_Shoot
		{
			KeepAlive 1 

			OnSpawnOutput
			{
				Target "!activator"
				Action "$SetCollisionFilter"
				Param "filter_is_blue"
				// Delay 0.1
			}

			OnSpawnOutput
			{
				Target "popscript"
				Action "$DroneFired"	
				Param "le_sentry"
			}
			
			// OnSpawnOutput
			// {
			// 	Target "le_sentry"
			// 	Action "$SetProp$m_hBuilder"
			// 	Param "@e@m_hOwnerEntity@!activator"	
			// 	Delay -1
			// }

			OnSpawnOutput
			{
				Target "droneModel"
				Action "Trigger"
			}

			OnParentKilledOutput
			{
				Target "le_sentry"
				Action "RemoveHealth"
				Param "100000000000000"			
			}
			OnParentKilledOutput
			{
				Target "le_sentry"
				Action "kill"		
				Delay 0.1
			}

			// OnParentKilledOutput
			// {
			// 	Target "le_sentry"
			// 	Action "Kill"
			// 	Delay 5
			// }

			OnParentKilledOutput
			{
				Target "droneModel"
				Action "Kill"	
			}

			logic_relay 
			{
				"targetname" "droneModel"

				// "OnTrigger" "le_sentry,$SetProp$m_nSolidType,0,0,-1" 
				"OnTrigger" "le_sentry,$SetModelOverride,models/rcat/rcat_level2.mdl,0,-1" 
				"OnTrigger" "le_sentry,$SetProp$m_nSkin,2,0,-1"
				"OnTrigger" "le_sentry,SetHealth,50,0,-1"
			}

			obj_sentrygun
			{
				"targetname" "le_sentry"
				"teamnum" "2"
				"defaultupgrade" "0"
				"SolidToPlayer" "0"
				"spawnflags" "72" // inf ammo + mini sentry

				"$OnKilled" "@p@le_sentry,Kill,,-1,-1"
			}
		}

		NoMercy_Spawn
		{
			OnSpawnOutput
			{
				Target "nomercy_check"
				Action "Trigger"
			}

			OnParentKilledOutput
			{
				Target "!activator"
				Action "$SetData$m_flGravity"
				Param "0"
			}

			logic_relay 
			{
				"targetname" "nomercy_check"
				"spawnflags" "2"

				"OnTrigger" "filter_ducked,TestActivator,,0,-1"
				"OnTrigger" "!self,Trigger,,0.1,-1"
			}

			$filter_sendprop
			{
				"targetname" "filter_ducked"
				"$name" "m_bDucked"
				"$value" "0"
				"$compare" "equal"
				"Negated" "1"

				"OnPass" "!activator,$SetData$m_flGravity,4,0,-1"
				"OnFail" "!activator,$SetData$m_flGravity,0.3,0,-1"
			}
		}

		KirinAscension_Spawn 
		{
			OnSpawnOutput
			{
				Target "cloak_check"
				Action "Trigger"
			}

			filter_tf_condition
			{
				"targetname" "filter_is_cloaking"
				"Negated" "0"
				"condition" "4"

				"OnPass" "!activator,$RemoveCond,3,0,-1" //remove disguise
				"OnPass" "!activator,$AddCond,72,0,-1"
				"OnPass" "!activator,$AddPlayerAttribute,cannot disguise|1,0,-1"

				"OnFail" "!activator,$RemoveCond,72,0,-1"
				"OnFail" "!activator,$RemovePlayerAttribute,cannot disguise,0,-1"
			}

			logic_relay 
			{
				"targetname" "cloak_check"
				"spawnflags" "2"

				"OnTrigger" "filter_is_cloaking,TestActivator,,0,-1"    
				"OnTrigger" "!self,Trigger,,0.05,-1"  
			}
		}

		FreelanceMercenary_Logic
		{
			OnSpawnOutput 
			{
				Target "freelance_action_check"
				Action "Trigger"
				Delay 0
			}

			OnSpawnOutput 
			{
				Target "!activator"
				Action "$SetVar$FreelanceEquipped"
				Param "1"
				Delay 0
			}

			OnSpawnOutput 
			{
				Target "!activator"
				Action "$GetVar$PreFreelanceSwitchHealth"
				Param "apply_last_health|$SetKey$CompareValue|-1"
				Delay 0
			}

			OnSpawnOutput 
			{
				Target "apply_last_health"
				Action "Compare"
				Delay 0.06
			}

			OnParentKilledOutput 
			{
				Target "!activator"
				Action "$SetVar$FreelanceEquipped"
				Param "0"
				Delay -1
			}
			
			//apply health from previous class if switched
			logic_compare
			{
				"targetname" "apply_last_health"

				"InitialValue" "-1"

				"OnNotEqualTo" "!activator,$SetKey$health,$$=!activator.PreFreelanceSwitchHealth,-1,-1"
				
				"OnNotEqualTo" "!activator,$SetVar$PreFreelanceSwitchHealth,,0,-1"
				"OnNotEqualTo" "!activator,$SetVar$FreelanceSwitched,1,-1,-1"
			}

			$filter_sendprop
			{
				"targetname" "using_action"
				"$name" "m_bUsingActionSlot"
				"$value" "0"
				"$compare" "equal"
				"Negated" "1"

				//"OnPass" "class_select_menu,$DisplayMenu,!activator,0,-1"
				"OnPass" "!activator,$SetVar$PreFreelanceSwitchHealth,$$= !activator.m_iHealth ,-1,-1"
				"OnPass" "popscript,$FreelanceMerc_PromptMenu,$$=!activator.m_iClass,0,-1"

				// "OnPass" "!activator,$SetVar$PreFreelanceSwitchHealth,$$= !activator.m_iHealth ,-1,-1"
				// "OnPass" "!activator,$SwitchClassInPlace,$$= test ( !activator.m_iClass + 1 <= 9 , !activator.m_iClass + 1, 1 ) ,0,-1"
			}

			logic_relay
			{
				"targetname" "freelance_action_check"
				"spawnflags" "2"

				"OnTrigger" "using_action,TestActivator,,0,-1"
				"OnTrigger" "!self,Trigger,,0.1,-1"
			}
		}

	}
}